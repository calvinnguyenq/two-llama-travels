{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steven Grimshaw\\\\Desktop\\\\Project3\\\\src\\\\Hotels.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar axios = require(\"axios\").default;\n\nfunction Hotels(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [getLocationId, setLocationId] = useState(\"\");\n  const [getHotels, setHotels] = useState([]);\n  var getLocationIdOptions = {\n    method: 'GET',\n    url: 'https://hotels4.p.rapidapi.com/locations/v2/search',\n    params: {\n      query: 'new york',\n      locale: 'en_US',\n      currency: 'USD'\n    },\n    headers: {\n      'x-rapidapi-host': 'hotels4.p.rapidapi.com',\n      'x-rapidapi-key': 'fc1f1ff2d3mshe2267e55a9681dfp1c29e0jsnfc471925dd78'\n    }\n  };\n  axios.request(getLocationIdOptions).then(_s(function (response) {\n    _s();\n\n    setLocationId(response.data.suggestions[0].entities[0].destinationId);\n    console.log(response.data.suggestions[0].entities[0].destinationId);\n    useEffect(() => {\n      var getHotelsOptions = {\n        method: 'GET',\n        url: 'https://hotels4.p.rapidapi.com/properties/list',\n        params: {\n          destinationId: getLocationId,\n          pageNumber: '1',\n          pageSize: '25',\n          checkIn: '2020-01-08',\n          checkOut: '2020-01-15',\n          adults1: '1',\n          sortOrder: 'PRICE',\n          locale: 'en_US',\n          currency: 'USD'\n        },\n        headers: {\n          'x-rapidapi-host': 'hotels4.p.rapidapi.com',\n          'x-rapidapi-key': 'fc1f1ff2d3mshe2267e55a9681dfp1c29e0jsnfc471925dd78'\n        }\n      };\n      axios.request(getHotelsOptions).then(function (response) {\n        setHotels(response.data.data.body.searchResults.results);\n        console.log(response.data.data.body.searchResults.results);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }, []);\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")).catch(function (error) {\n    console.error(error);\n  });\n  const columns = [{\n    name: 'Name',\n    selector: row => row.name\n  }, {\n    name: 'Stars',\n    selector: row => row.starRating,\n    sortable: true\n  }, {\n    name: 'Price',\n    selector: row => row.ratePlan.price.current + \" per night\",\n    sortable: true\n  }];\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    title: \"Hotels\",\n    columns: columns,\n    data: getHotels,\n    fixedHeader: true,\n    fixedHeaderScrollHeight: \"300px\",\n    progressPending: getHotels.length === 0,\n    pagination: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Hotels, \"m61CgGJkGXJEdSaEbRdBqGi3GlE=\");\n\n_c = Hotels;\nexport default Hotels;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hotels\");","map":{"version":3,"sources":["C:/Users/Steven Grimshaw/Desktop/Project3/src/Hotels.js"],"names":["React","useState","useEffect","DataTable","axios","require","default","Hotels","props","getLocationId","setLocationId","getHotels","setHotels","getLocationIdOptions","method","url","params","query","locale","currency","headers","request","then","response","data","suggestions","entities","destinationId","console","log","getHotelsOptions","pageNumber","pageSize","checkIn","checkOut","adults1","sortOrder","body","searchResults","results","catch","error","columns","name","selector","row","starRating","sortable","ratePlan","price","current","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nvar axios = require(\"axios\").default;\r\n\r\nfunction Hotels(props) {\r\n\r\n    const [getLocationId, setLocationId] = useState(\"\");\r\n    const [getHotels, setHotels] = useState([])\r\n    \r\n    var getLocationIdOptions = {\r\n      method: 'GET',\r\n      url: 'https://hotels4.p.rapidapi.com/locations/v2/search',\r\n      params: {query: 'new york', locale: 'en_US', currency: 'USD'},\r\n      headers: {\r\n        'x-rapidapi-host': 'hotels4.p.rapidapi.com',\r\n        'x-rapidapi-key': 'fc1f1ff2d3mshe2267e55a9681dfp1c29e0jsnfc471925dd78'\r\n      }\r\n    };\r\n\r\n    axios.request(getLocationIdOptions).then(function (response) {\r\n      setLocationId(response.data.suggestions[0].entities[0].destinationId);\r\n      console.log(response.data.suggestions[0].entities[0].destinationId);\r\n\r\n      useEffect(() => {\r\n        var getHotelsOptions = {\r\n          method: 'GET',\r\n          url: 'https://hotels4.p.rapidapi.com/properties/list',\r\n          params: {\r\n            destinationId: getLocationId,\r\n            pageNumber: '1',\r\n            pageSize: '25',\r\n            checkIn: '2020-01-08',\r\n            checkOut: '2020-01-15',\r\n            adults1: '1',\r\n            sortOrder: 'PRICE',\r\n            locale: 'en_US',\r\n            currency: 'USD'\r\n          },\r\n          headers: {\r\n            'x-rapidapi-host': 'hotels4.p.rapidapi.com',\r\n            'x-rapidapi-key': 'fc1f1ff2d3mshe2267e55a9681dfp1c29e0jsnfc471925dd78'\r\n          }\r\n        };\r\n  \r\n        axios.request(getHotelsOptions).then(function (response) {\r\n            setHotels(response.data.data.body.searchResults.results);\r\n            console.log(response.data.data.body.searchResults.results);\r\n        }).catch(function (error) {\r\n            console.error(error);\r\n        });\r\n      }, []);\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n\r\n    const columns = [\r\n      {\r\n        name: 'Name',\r\n        selector: row => row.name,\r\n      },\r\n      {\r\n        name: 'Stars',\r\n        selector: row => row.starRating,\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: 'Price',\r\n        selector: row => row.ratePlan.price.current + \" per night\",\r\n        sortable: true,\r\n      },\r\n    ];\r\n\r\n    return (\r\n        <DataTable\r\n          title=\"Hotels\"\r\n          columns={columns}\r\n          data={getHotels}\r\n          fixedHeader\r\n          fixedHeaderScrollHeight=\"300px\"\r\n          progressPending={(getHotels.length === 0)}\r\n          pagination\r\n          />\r\n    );\r\n}\r\n\r\nexport default Hotels;"]},"metadata":{},"sourceType":"module"}